{
  "info": {
    "_postman_id": "076a2500-8e88-46fe-afea-ea29d7c7c281",
    "name": "API Functional Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "33884383"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\"email\":\"{{email}}\", \"password\":\"{{password}}\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/auth",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Login - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Login - Response contains a token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property(\"token\");",
                  "    pm.expect(jsonData.data.token).to.be.a(\"string\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Users - Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Users - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Users - Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Users - Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"email\":\"test@example.com\", \"username\":\"testuser\", \"password\":\"Password123!\", \"role\":\"Customer\" }"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Create User - Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Create User - Response contains user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "    pm.expect(jsonData).to.have.property(\"email\");",
                  "    pm.expect(jsonData.email).to.be.a(\"string\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Users - Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get User by ID - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get User by ID - Response contains user details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "    pm.expect(jsonData).to.have.property(\"email\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Users - Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"email\":\"updated@example.com\", \"username\":\"updateduser\", \"role\":\"Manager\" }"
            },
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Update User - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Update User - Response contains updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"email\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Users - Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "users",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Delete User - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Delete User - Response confirms deletion\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Products - Get All Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Products - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Products - Response contains product list\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Products - Get Product by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Product by ID - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Product by ID - Response contains product details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "    pm.expect(jsonData).to.have.property(\"title\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Products - Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"title\":\"Product Name\", \"price\":99.99, \"description\":\"Product Description\", \"category\":\"Category\", \"image\":\"http://example.com/image.jpg\" }"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Create Product - Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Create Product - Response contains product data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property(\"id\");",
                  "    pm.expect(jsonData.data).to.have.property(\"title\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Products - Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"title\":\"Updated Product\", \"price\":79.99, \"description\":\"Updated Description\", \"category\":\"Updated Category\", \"image\":\"http://example.com/newimage.jpg\" }"
            },
            "url": {
              "raw": "{{baseUrl}}/products/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Update Product - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Update Product - Response contains updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"title\");",
                  "    pm.expect(jsonData.title).to.be.a(\"string\");",
                  "    pm.expect(jsonData).to.have.property(\"price\");",
                  "    pm.expect(jsonData.price).to.be.a(\"number\");",
                  "    pm.expect(jsonData).to.have.property(\"description\");",
                  "    pm.expect(jsonData.description).to.be.a(\"string\");",
                  "    pm.expect(jsonData).to.have.property(\"category\");",
                  "    pm.expect(jsonData.category).to.be.a(\"string\");",
                  "    pm.expect(jsonData).to.have.property(\"image\");",
                  "    pm.expect(jsonData.image).to.be.a(\"string\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Products - Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Delete Product - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Delete Product - Response confirms deletion\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Products - Get Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/products/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "products",
                "categories"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Product Categories - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Product Categories - Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an(\"array\");",
                  "    pm.expect(jsonData.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Carts",
      "item": [
        {
          "name": "Carts - Get All Carts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/carts",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Carts - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Carts - Response contains cart list\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Carts - Get Cart by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/carts/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Cart by ID - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Cart by ID - Response contains cart details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Carts - Create Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"userId\": 1, \"date\": \"2025-02-10\", \"products\": [{ \"productId\": 1, \"quantity\": 2 }] }"
            },
            "url": {
              "raw": "{{baseUrl}}/carts",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Create Cart - Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Create Cart - Response contains cart data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Carts - Update Cart",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{ \"userId\": 1, \"date\": \"2025-02-12\", \"products\": [{ \"productId\": 1, \"quantity\": 3 }] }"
            },
            "url": {
              "raw": "{{baseUrl}}/carts/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Update Cart - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Update Cart - Response contains updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "    pm.expect(jsonData).to.have.property(\"userId\");",
                  "    pm.expect(jsonData).to.have.property(\"date\");",
                  "    pm.expect(jsonData).to.have.property(\"products\");",
                  "    pm.expect(jsonData.products).to.be.an(\"array\");",
                  "    pm.expect(jsonData.products.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Carts - Delete Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/carts/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Delete Cart - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Delete Cart - Response confirms deletion\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Carts - Checkout Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/carts/1/checkout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "carts",
                "1",
                "checkout"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Checkout Cart - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Checkout Cart - Response confirms checkout success\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "    pm.expect(jsonData.message).to.be.a(\"string\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Sales",
      "item": [
        {
          "name": "Sales - Get All Sales",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sales",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sales"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Sales - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Sales - Response contains sales list\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"data\");",
                  "    pm.expect(jsonData.data).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sales - Get Sale by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sales/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sales",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Get Sale by ID - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Get Sale by ID - Response contains sale details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"id\");",
                  "    pm.expect(jsonData).to.have.property(\"customerId\");",
                  "    pm.expect(jsonData).to.have.property(\"items\");",
                  "    pm.expect(jsonData.items).to.be.an(\"array\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sales - Update Sale",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"customerId\":1, \"items\":[{\"productId\":1, \"quantity\":2}]}"
            },
            "url": {
              "raw": "{{baseUrl}}/sales/1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sales",
                "1"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Update Sale - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Update Sale - Response contains updated data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"customerId\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sales - Cancel Sale",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sales/1/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sales",
                "1",
                "cancel"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cancel Sale - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Cancel Sale - Response confirms cancellation\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Sales - Cancel Sale Item",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/sales/1/items/1/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sales",
                "1",
                "items",
                "1",
                "cancel"
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cancel Sale Item - Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Cancel Sale Item - Response confirms item cancellation\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property(\"message\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "if (!pm.variables.get(\"token\") || pm.variables.get(\"token_expiration\") < Date.now()) {",
          "    pm.sendRequest({",
          "        url: pm.variables.get(\"baseUrl\") + \"/auth\",",
          "        method: \"POST\",",
          "        header: { \"Content-Type\": \"application/json\" },",
          "        body: {",
          "            mode: \"raw\",",
          "            raw: JSON.stringify({",
          "                email: pm.variables.get(\"email\"),",
          "                password: pm.variables.get(\"password\")",
          "            })",
          "        }",
          "    }, function (err, res) {",
          "        if (!err && res.code === 200) {",
          "            var jsonData = res.json();",
          "            pm.collectionVariables.set(\"token\", jsonData.token);",
          "            var tokenPayload = JSON.parse(atob(jsonData.token.split(\".\")[1]));",
          "            pm.collectionVariables.set(\"token_expiration\", tokenPayload.exp * 1000);",
          "        }",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://localhost:8081/api",
      "type": "string"
    },
    {
      "key": "email",
      "value": "admin@example.com",
      "type": "string"
    },
    {
      "key": "password",
      "value": "A#g7jfdsd#$%#",
      "type": "string"
    },
    {
      "key": "token",
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxIiwidW5pcXVlX25hbWUiOiJhZG1pbiIsInJvbGUiOiJBZG1pbiIsIm5iZiI6MTc0MjA3NTA3NCwiZXhwIjoxNzQyMTAzODc0LCJpYXQiOjE3NDIwNzUwNzR9.8UZLGAEsDAp-th57VSHjNK4zp4m535UajGcoy8Z2qcE",
      "type": "string"
    },
    {
      "key": "token_expiration",
      "value": "",
      "type": "string"
    }
  ]
}