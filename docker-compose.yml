version: '3.8'

services:
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/https:ro
    depends_on:
      ambev.developerevaluation.database:
        condition: service_healthy 

  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13

    environment:
      POSTGRES_DB: ${POSTGRES_DB:-developer_evaluation}
      POSTGRES_USER: ${POSTGRES_USER:-developer}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-example_password}
    ports:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-developer} -d ${POSTGRES_DB:-developer_evaluation}"]
      interval: 5s
      timeout: 3s
      retries: 5

  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache 
    image: redis:7.4.1-alpine     
    command: redis-server --requirepass ${REDIS_PASSWORD:-example_password}
    environment:
       MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-developer}
       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example_password}
    ports:
       - "6379"